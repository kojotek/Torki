FUNCTION_BLOCK driver

VAR_INPUT
	angle : REAL;
	curvePrediction : REAL;
	distanceRaced : REAL;
	opponent0 : REAL;
	opponent1 : REAL;
	opponent10 : REAL;
	opponent11 : REAL;
	opponent12 : REAL;
	opponent13 : REAL;
	opponent14 : REAL;
	opponent15 : REAL;
	opponent16 : REAL;
	opponent17 : REAL;
	opponent18 : REAL;
	opponent19 : REAL;
	opponent2 : REAL;
	opponent20 : REAL;
	opponent21 : REAL;
	opponent22 : REAL;
	opponent23 : REAL;
	opponent24 : REAL;
	opponent25 : REAL;
	opponent26 : REAL;
	opponent27 : REAL;
	opponent28 : REAL;
	opponent29 : REAL;
	opponent3 : REAL;
	opponent30 : REAL;
	opponent31 : REAL;
	opponent32 : REAL;
	opponent33 : REAL;
	opponent34 : REAL;
	opponent35 : REAL;
	opponent4 : REAL;
	opponent5 : REAL;
	opponent6 : REAL;
	opponent7 : REAL;
	opponent8 : REAL;
	opponent9 : REAL;
	speed : REAL;
	track0 : REAL;
	track1 : REAL;
	track10 : REAL;
	track11 : REAL;
	track12 : REAL;
	track13 : REAL;
	track14 : REAL;
	track15 : REAL;
	track16 : REAL;
	track17 : REAL;
	track18 : REAL;
	track2 : REAL;
	track3 : REAL;
	track4 : REAL;
	track5 : REAL;
	track6 : REAL;
	track7 : REAL;
	track8 : REAL;
	track9 : REAL;
	trackPos : REAL;
END_VAR

VAR_OUTPUT
	accelerate : REAL;
	brake : REAL;
	steering : REAL;
END_VAR

FUZZIFY angle
	TERM angleA :=  (-0.35, 0.0) (-0.2, 1.0) (0.13, 1.0) (0.2, 0.0) ;
	TERM angleB :=  (-0.15, 0.0) (-0.02, 1.0) (0.13, 1.0) (0.43, 0.0) ;
END_FUZZIFY

FUZZIFY curvePrediction
	TERM center :=  (-0.5, 0.0) (-0.3, 1.0) (0.3, 1.0) (0.5, 0.0) ;
	TERM left :=  (-400.0, 1.0) (-0.5, 1.0) (-0.1, 0.0) ;
	TERM right :=  (0.1, 0.0) (0.5, 1.0) (400.0, 1.0) ;
END_FUZZIFY

FUZZIFY distanceRaced
	TERM not_start :=  (200.0, 0.0) (250.0, 1.0) ;
	TERM start :=  (0.0, 1.0) (200.0, 1.0) (250.0, 0.0) ;
END_FUZZIFY

FUZZIFY opponent0
END_FUZZIFY

FUZZIFY opponent1
END_FUZZIFY

FUZZIFY opponent10
END_FUZZIFY

FUZZIFY opponent11
END_FUZZIFY

FUZZIFY opponent12
END_FUZZIFY

FUZZIFY opponent13
END_FUZZIFY

FUZZIFY opponent14
END_FUZZIFY

FUZZIFY opponent15
END_FUZZIFY

FUZZIFY opponent16
END_FUZZIFY

FUZZIFY opponent17
END_FUZZIFY

FUZZIFY opponent18
END_FUZZIFY

FUZZIFY opponent19
END_FUZZIFY

FUZZIFY opponent2
END_FUZZIFY

FUZZIFY opponent20
END_FUZZIFY

FUZZIFY opponent21
END_FUZZIFY

FUZZIFY opponent22
END_FUZZIFY

FUZZIFY opponent23
END_FUZZIFY

FUZZIFY opponent24
END_FUZZIFY

FUZZIFY opponent25
END_FUZZIFY

FUZZIFY opponent26
END_FUZZIFY

FUZZIFY opponent27
END_FUZZIFY

FUZZIFY opponent28
END_FUZZIFY

FUZZIFY opponent29
END_FUZZIFY

FUZZIFY opponent3
END_FUZZIFY

FUZZIFY opponent30
END_FUZZIFY

FUZZIFY opponent31
END_FUZZIFY

FUZZIFY opponent32
END_FUZZIFY

FUZZIFY opponent33
END_FUZZIFY

FUZZIFY opponent34
END_FUZZIFY

FUZZIFY opponent35
END_FUZZIFY

FUZZIFY opponent4
END_FUZZIFY

FUZZIFY opponent5
END_FUZZIFY

FUZZIFY opponent6
END_FUZZIFY

FUZZIFY opponent7
END_FUZZIFY

FUZZIFY opponent8
END_FUZZIFY

FUZZIFY opponent9
END_FUZZIFY

FUZZIFY speed
	TERM speedA :=  (-1.0, 0.0) (1.0, 1.0) (139.0, 1.0) (140.0, 0.0) ;
	TERM speedB :=  (139.0, 0.0) (140.0, 1.0) (250.0, 1.0) (251.0, 0.0) ;
END_FUZZIFY

FUZZIFY track0
END_FUZZIFY

FUZZIFY track1
END_FUZZIFY

FUZZIFY track10
	TERM track10A :=  (16.0, 0.0) (28.0, 1.0) (138.0, 1.0) (164.0, 0.0) ;
	TERM track10B :=  (48.0, 0.0) (55.0, 1.0) (148.0, 1.0) (197.0, 0.0) ;
END_FUZZIFY

FUZZIFY track11
	TERM track11A :=  (5.0, 0.0) (20.0, 1.0) (70.0, 1.0) (80.0, 0.0) ;
	TERM track11B :=  (0.0, 0.0) (35.0, 1.0) (160.0, 1.0) (187.0, 0.0) ;
END_FUZZIFY

FUZZIFY track12
	TERM track12A :=  (0.0, 0.0) (17.0, 1.0) (50.0, 1.0) (54.0, 0.0) ;
	TERM track12B :=  (0.0, 0.0) (22.0, 1.0) (178.0, 1.0) (185.0, 0.0) ;
END_FUZZIFY

FUZZIFY track13
	TERM track13A :=  (0.0, 0.0) (13.0, 1.0) (43.0, 1.0) (47.0, 0.0) ;
	TERM track13B :=  (0.0, 0.0) (15.0, 1.0) (184.0, 1.0) (185.0, 0.0) ;
END_FUZZIFY

FUZZIFY track14
END_FUZZIFY

FUZZIFY track15
END_FUZZIFY

FUZZIFY track16
END_FUZZIFY

FUZZIFY track17
END_FUZZIFY

FUZZIFY track18
END_FUZZIFY

FUZZIFY track2
END_FUZZIFY

FUZZIFY track3
END_FUZZIFY

FUZZIFY track4
END_FUZZIFY

FUZZIFY track5
	TERM track5A :=  (2.0, 0.0) (7.0, 1.0) (180.0, 1.0) (215.0, 0.0) ;
	TERM track5B :=  (2.0, 0.0) (22.0, 1.0) (36.0, 1.0) (51.0, 0.0) ;
END_FUZZIFY

FUZZIFY track6
	TERM track6A :=  (5.0, 0.0) (10.0, 1.0) (200.0, 1.0) (201.0, 0.0) ;
	TERM track6B :=  (22.0, 0.0) (27.0, 1.0) (47.0, 1.0) (57.0, 0.0) ;
END_FUZZIFY

FUZZIFY track7
	TERM track7A :=  (7.0, 0.0) (16.0, 1.0) (200.0, 1.0) (201.0, 0.0) ;
	TERM track7B :=  (30.0, 0.0) (32.0, 1.0) (60.0, 1.0) (79.0, 0.0) ;
	TERM track7B2 :=  (95.0, 0.0) (100.0, 1.0) (130.0, 1.0) (140.0, 0.0) ;
END_FUZZIFY

FUZZIFY track8
	TERM track8A :=  (40.0, 0.0) (45.0, 1.0) (200.0, 1.0) (201.0, 0.0) ;
	TERM track8B :=  (35.0, 0.0) (38.0, 1.0) (65.0, 1.0) (88.0, 0.0) ;
	TERM track8B2 :=  (80.0, 0.0) (85.0, 1.0) (136.0, 1.0) (158.0, 0.0) ;
END_FUZZIFY

FUZZIFY track9
	TERM dist_far :=  (35.0, 0.0) (55.0, 1.0) (199.0, 1.0) (200.0, 0.0) ;
	TERM dist_medium :=  (20.0, 1.0) (35.0, 1.0) (55.0, 0.0) ;
	TERM dist_near :=  (0.0, 1.0) (20.0, 1.0) (35.0, 0.0) ;
	TERM dist_very_far :=  (199.0, 0.0) (200.0, 1.0) ;
END_FUZZIFY

FUZZIFY trackPos
	TERM center :=  (-0.6, 0.0) (-0.3, 1.0) (0.3, 1.0) (0.6, 0.0) ;
	TERM left :=  (0.3, 0.0) (0.6, 1.0) (9.0, 1.0) ;
	TERM right :=  (-9.0, 1.0) (-0.6, 1.0) (-0.3, 0.0) ;
END_FUZZIFY

DEFUZZIFY accelerate
	TERM fullgas :=  (0.7, 0.0) (1.3, 1.0) ;
	TERM medgas :=  (0.3, 0.0) (0.5, 1.0) (0.7, 1.0) (0.9, 0.0) ;
	TERM nogas :=  (0.0, 1.0) (0.3, 1.0) (0.5, 0.0) ;
	METHOD : COG;
	DEFAULT := 0.0;
	RANGE := (0.0 .. 1.3);
END_DEFUZZIFY

DEFUZZIFY brake
	TERM fullbrake :=  (0.035, 0.0) (1.1, 1.0) ;
	TERM nobrake :=  (-0.1, 1.0) (0.035, 0.0) ;
	METHOD : COG;
	DEFAULT := 0.0;
	RANGE := (-0.1 .. 1.1);
END_DEFUZZIFY

DEFUZZIFY steering
	TERM steeringCenter :=  (-0.01, 0.0) (0.0, 1.0) (0.01, 0.0) ;
	TERM steeringLeft :=  (0.0, 0.0) (1.13, 1.0) ;
	TERM steeringRight :=  (-1.13, 1.0) (0.0, 0.0) ;
	METHOD : COG;
	DEFAULT := 0.0;
	RANGE := (-1.13 .. 1.13);
END_DEFUZZIFY

RULEBLOCK No1
	ACT : MIN;
	ACCU : MAX;
	AND : MIN;
	RULE 1 : IF track9  IS NOT dist_near THEN accelerate IS fullgas , brake IS nobrake;
	RULE 2 : IF (((((((((angle IS angleA) AND (speed IS speedB)) AND (track5 IS track5A)) AND (track6 IS track6A)) AND (track7 IS track7A)) AND (track8 IS track8A)) AND (track10 IS track10A)) AND (track11 IS track11A)) AND (track12 IS track12A)) AND (track13 IS track13A) THEN steering IS steeringLeft;
	RULE 3 : IF (((((((((angle IS angleB) AND (speed IS speedB)) AND (track5 IS track5B)) AND (track6 IS track6B)) AND ((track7 IS track7B) OR (track7 IS track7B2))) AND ((track8 IS track8B) OR (track8 IS track8B2))) AND (track10 IS track10B)) AND (track11 IS track11B)) AND ((track12 IS track12A) OR (track12 IS track12B))) AND ((track13 IS track13A) OR (track13 IS track13B)) THEN steering IS steeringRight;
END_RULEBLOCK

END_FUNCTION_BLOCK

