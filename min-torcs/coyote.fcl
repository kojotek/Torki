FUNCTION_BLOCK driver

VAR_INPUT

	// angles {-90,-75,-60,-45,-30,-20,-15,-10,-5,0,5,10,15,20,30,45,60,75,90}
	track0: REAL;
	track1: REAL;
	track2: REAL;
	track3: REAL;
	track4: REAL;
	track5: REAL;
	track6: REAL;
	track7: REAL;
	track8: REAL;
	track9: REAL;
	track10: REAL;
	track11: REAL;
	track12: REAL;
	track13: REAL;
	track14: REAL;
	track15: REAL;
	track16: REAL;
	track17: REAL;
	track18: REAL;

	trackPos: REAL;

	curvePred0: REAL;
	curvePred1: REAL;
	curvePred2: REAL;
	curvePred3: REAL;
	curvePred4: REAL;
	curvePred5: REAL;
	curvePred6: REAL;
	curvePred7: REAL;
	curvePred8: REAL;
	curvePred9: REAL;

	speed: REAL;

	opponent0: REAL;
	opponent1: REAL;
	opponent2: REAL;
	opponent3: REAL;
	opponent4: REAL;
	opponent5: REAL;
	opponent6: REAL;
	opponent7: REAL;
	opponent8: REAL;
	opponent9: REAL;
	opponent10: REAL;
	opponent11: REAL;
	opponent12: REAL;
	opponent13: REAL;
	opponent14: REAL;
	opponent15: REAL;
	opponent16: REAL;
	opponent17: REAL;
	opponent18: REAL;
	opponent19: REAL;
	opponent20: REAL;
	opponent21: REAL;
	opponent22: REAL;
	opponent23: REAL;
	opponent24: REAL;
	opponent25: REAL;
	opponent26: REAL;
	opponent27: REAL;
	opponent28: REAL;
	opponent29: REAL;
	opponent30: REAL;
	opponent31: REAL;
	opponent32: REAL;
	opponent33: REAL;
	opponent34: REAL;
	opponent35: REAL;
	angle: REAL;
	distanceRaced: REAL;
	weightedMean: REAL;
	
	
	
END_VAR



VAR_OUTPUT
	steering: REAL;
	accelerate: REAL;
	brake: REAL;
END_VAR



FUZZIFY distanceRaced
	TERM start := (0.0, 1) (200, 1) (250,0);
	TERM not_start := (200, 0) (250, 1);
END_FUZZIFY

FUZZIFY trackPos
	TERM left := (0.3, 0) (0.6, 1) (9,1);
	TERM center := (-0.6, 0) (-0.3, 1) (0.3, 1) (0.6, 0);
	TERM right := (-9, 1) (-0.6, 1) (-0.3, 0);
END_FUZZIFY

FUZZIFY angle
	TERM drift_left := (-75, 1) (-5, 1) (-3, 0);
	TERM left := (-3.15, 1) (-0.9, 1) (0, 0);
	TERM center := (-0.9, 0) (0, 1) (0.9, 0);
	TERM right := (0, 0) (0.9, 1) (3.15, 1);
	TERM drift_right := (3, 0) (5, 1) (75, 0);
END_FUZZIFY

//==//==//==//==//==//==//==//==//==//==//==//==//==//==//

FUZZIFY track2
	TERM dist_medium := (0, 1) (10, 0);
	TERM dist_far := (5, 0) (10, 1) (200, 1);
END_FUZZIFY

FUZZIFY track16
	TERM dist_medium := (0, 1) (10, 0);
	TERM dist_far := (5, 0) (10, 1) (200, 1);
END_FUZZIFY

//==//==//==//==//==//==//==//==//==//==//==//==//==//==//

FUZZIFY track6
	TERM dist_medium := (0, 1) (20, 0);
	TERM dist_far := (10, 0) (20, 1) (200, 1);
END_FUZZIFY

FUZZIFY track12
	TERM dist_medium := (0, 1) (20, 0);
	TERM dist_far := (10, 0) (20, 1) (200, 1);
END_FUZZIFY

//==//==//==//==//==//==//==//==//==//==//==//==//==//==//

FUZZIFY track7
	TERM dist_near := (0, 1) (2, 1) (5, 0);
	TERM dist_medium := (2, 0) (5, 1) (20, 1) (25, 0);
	TERM dist_far := (20, 0) (25, 1) (200, 1);
END_FUZZIFY

FUZZIFY track11
	TERM dist_near := (0, 1) (2, 1) (5, 0);
	TERM dist_medium := (2, 0) (5, 1) (20, 1) (25, 0);
	TERM dist_far := (20, 0) (25, 1) (200, 1);
END_FUZZIFY

//==//==//==//==//==//==//==//==//==//==//==//==//==//==//

FUZZIFY track8
	TERM dist_near := (0, 1) (2, 1) (5, 0);
	TERM dist_medium := (2, 0) (10, 1) (20, 1) (30, 0);
	TERM dist_far := (20, 0) (30, 1) (200, 1);
END_FUZZIFY

FUZZIFY track10
	TERM dist_near := (0, 1) (2, 1) (5, 0);
	TERM dist_medium := (2, 0) (10, 1) (20, 1) (30, 0);
	TERM dist_far := (20, 0) (30, 1) (200, 1);
END_FUZZIFY

//==//==//==//==//==//==//==//==//==//==//==//==//==//==//

FUZZIFY track9
	TERM dist_near := (0, 1) (30, 1) (45, 0);
	TERM dist_medium := (30, 1) (45, 1) (55, 0);
	TERM dist_far := (45, 0) (55, 1) (199, 1) (200, 0);
	TERM dist_very_far := (199, 0) (200, 1) (201, 0);
	
	TERM tr1 := (-1, 0)		(0, 1)		(30, 1)		(40, 0);
	TERM tr2 := (30, 0)		(40, 1)		(70, 1)		(80, 0);
	TERM tr3 := (70, 0)		(80, 1)		(110, 1)	(120, 0);
	TERM tr4 := (110, 0)	(120, 1)	(150, 1)	(160, 0);
	TERM tr5 := (150, 0)	(160, 1)	(190, 1)	(199, 0);
	
END_FUZZIFY

//==//==//==//==//==//==//==//==//==//==//==//==//==//==//


FUZZIFY speed
	TERM speed_slow :=	(0, 1) (90, 1) (120, 0);
	TERM speed_medium :=	(90, 0) (100, 1) (140, 1) (150, 0);
	TERM speed_fast :=	(140, 0) (150, 1) (500, 1);
	
	TERM sp1 := (-1, 0)		(0, 1)		(50, 1)		(70, 0);
	TERM sp2 := (50, 0)		(70, 1)		(110, 1)	(130, 0);
	TERM sp3 := (110, 0)	(130, 1)	(170, 1)	(190, 0);
	TERM sp4 := (170, 0)	(190, 1)	(230, 1)	(250, 0);
	TERM sp5 := (230, 0)	(250, 1)	(290, 1)	(350, 0);
	
END_FUZZIFY

//==//==//==//==//==//==//==//==//==//==//==//==//==//==//

FUZZIFY curvePred0
	TERM pred_center :=	(-1.0, 0) (-0.01, 1) (0.01, 1) (1.0, 0);
	TERM pred_left :=	(-20.0, 1) (-0.2, 0);
	TERM pred_right :=	(0.2, 0) (20, 1);
END_FUZZIFY

FUZZIFY curvePred1
	TERM pred_center :=	(-1.0, 0) (-0.1, 1) (0.1, 1) (1.0, 0);
	TERM pred_left :=	(-20.0, 1) (-0.2, 0);
	TERM pred_right :=	(0.2, 0) (20, 1);
	
END_FUZZIFY

FUZZIFY curvePred2
	TERM pred_center :=	(-1.0, 0) (-0.2, 1) (0.2, 1) (1.0, 0);
	TERM pred_left :=	(-20.0, 1) (-0.2, 0);
	TERM pred_right :=	(0.2, 0) (20, 1);
END_FUZZIFY

FUZZIFY curvePred3
	TERM pred_center :=	(-1.0, 0) (-0.3, 1) (0.3, 1) (1.0, 0);
	TERM pred_left :=	(-20.0, 1) (-0.2, 0);
	TERM pred_right :=	(0.2, 0) (20, 1);
END_FUZZIFY


FUZZIFY weightedMean
	TERM right := 	(0, 0)  	(90, 1);
	TERM center := 	(-2, 0) 	(0, 1)		(2, 0);
	TERM left := 	(-90, 1) 	(-1, 0);
	
	TERM wm1  := gauss 12 4;
	TERM wm2  := gauss 10 4;
	TERM wm3  := gauss 8 4;
	TERM wm4  := gauss 6 4;
	TERM wm5  := gauss 4 4;
	TERM wm6  := gauss 2 4;
	TERM wm7  := gauss 0 4;
	TERM wm8  := gauss -2 4;
	TERM wm9  := gauss -4 4;
	TERM wm10 := gauss -6 4;
	TERM wm11 := gauss -8 4;
	TERM wm12 := gauss -10 4;
	TERM wm13 := gauss -12 4;
	
	
END_FUZZIFY


//=============================================================

DEFUZZIFY steering
	TERM turn_left := (0, 0) (1, 1);
	TERM stay_center := (-0.001, 0) (0, 1) (0.001, 0);
	TERM turn_right := (-1, 1) (0, 0);
	
	TERM st1  := gauss -0.8 0.2;
	TERM st2  := gauss -0.6 0.2;
	TERM st3  := gauss -0.4 0.2;
	TERM st4  := gauss -0.2 0.2;
	TERM st5  := gauss 0 0.2;
	TERM st6  := gauss 0.2 0.2;
	TERM st7  := gauss 0.4 0.2;
	TERM st8  := gauss 0.6 0.2;
	TERM st9  := gauss 0.8 0.2;
	TERM st10  := gauss 0.8 0.2;
	TERM st11 := gauss 0.8 0.2;
	TERM st12  := gauss 0.8 0.2;
	TERM st13  := gauss 0.8 0.2;
	
	METHOD : COG;
	DEFAULT := 0;
END_DEFUZZIFY

DEFUZZIFY accelerate
	TERM nogas :=	(0, 1) (0.3, 1) (0.5, 0);
	TERM medgas :=	(0.3, 0) (0.5, 1) (0.7, 1) (0.8, 0);
	TERM fullgas :=	(0.9, 0) (1.0, 1) (1.1, 0);
	
	TERM acc1  := gauss 1 1;
	TERM acc2  := gauss 1 1;
	TERM acc3  := gauss 1 1;
	TERM acc4  := gauss 1 1;
	TERM acc5  := gauss 1 1;
	TERM acc6  := gauss 1 1;
	TERM acc7  := gauss 1 1;
	TERM acc8  := gauss 1 1;
	TERM acc9  := gauss 1 1;
	TERM acc10 := gauss 1 1;
	TERM acc11 := gauss 1 1;
	TERM acc12 := gauss 1 1;
	TERM acc13 := gauss 1 1;
	TERM acc14 := gauss 1 1;
	TERM acc15 := gauss 1 1;
	TERM acc16 := gauss 1 1;
	TERM acc17 := gauss 1 1;
	TERM acc18 := gauss 1 1;
	TERM acc19 := gauss 1 1;
	TERM acc20 := gauss 1 1;
	TERM acc21 := gauss 1 1;
	TERM acc22 := gauss 1 1;
	TERM acc23 := gauss 1 1;
	TERM acc24 := gauss 1 1;
	TERM acc25 := gauss 1 1;
	
	METHOD : COG;
	DEFAULT := 0.000;
END_DEFUZZIFY

DEFUZZIFY brake
	TERM nobrake :=	(-0.1, 1) (0.035, 0) ;
	TERM fullbrake := (0.035, 0) (1.1, 1);
	
	TERM brk1  := gauss 1 1;
	TERM brk2  := gauss 1 1;
	TERM brk3  := gauss 1 1;
	TERM brk4  := gauss 1 1;
	TERM brk5  := gauss 1 1;
	TERM brk6  := gauss 1 1;
	TERM brk7  := gauss 1 1;
	TERM brk8  := gauss 1 1;
	TERM brk9  := gauss 1 1;
	TERM brk10 := gauss 1 1;
	TERM brk11 := gauss 1 1;
	TERM brk12 := gauss 1 1;
	TERM brk13 := gauss 1 1;
	TERM brk14 := gauss 1 1;
	TERM brk15 := gauss 1 1;
	TERM brk16 := gauss 1 1;
	TERM brk17 := gauss 1 1;
	TERM brk18 := gauss 1 1;
	TERM brk19 := gauss 1 1;
	TERM brk20 := gauss 1 1;
	TERM brk21 := gauss 1 1;
	TERM brk22 := gauss 1 1;
	TERM brk23 := gauss 1 1;
	TERM brk24 := gauss 1 1;
	TERM brk25 := gauss 1 1;
	
	METHOD : COG;
	DEFAULT := 0.000;
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;
	ACT : MIN;	
	ACCU : MAX;
	
	RULE 1  : IF (weightedMean IS wm1) THEN steering is st1;
	RULE 2  : IF (weightedMean IS wm2) THEN steering is st2;
	RULE 3  : IF (weightedMean IS wm3) THEN steering is st2;
	RULE 4  : IF (weightedMean IS wm4) THEN steering is st3;
	RULE 5  : IF (weightedMean IS wm5) THEN steering is st5;
	RULE 6  : IF (weightedMean IS wm6) THEN steering is st6;
	RULE 7  : IF (weightedMean IS wm7) THEN steering is st7;
	RULE 8  : IF (weightedMean IS wm8) THEN steering is st8;
	RULE 9  : IF (weightedMean IS wm9) THEN steering is st9;
	RULE 10 : IF (weightedMean IS wm10) THEN steering is st10;
	RULE 11 : IF (weightedMean IS wm11) THEN steering is st11;
	RULE 12 : IF (weightedMean IS wm12) THEN steering is st12;
	RULE 13 : IF (weightedMean IS wm13) THEN steering is st13;
	
	RULE 14 : IF (speed IS sp1) AND (track9 IS tr1 ) THEN accelerate IS acc1 , brake IS brk1 ;
	RULE 15 : IF (speed IS sp1) AND (track9 IS tr2 ) THEN accelerate IS acc2 , brake IS brk2 ;
	RULE 16 : IF (speed IS sp1) AND (track9 IS tr3 ) THEN accelerate IS acc3 , brake IS brk3 ;
	RULE 17 : IF (speed IS sp1) AND (track9 IS tr4 ) THEN accelerate IS acc4 , brake IS brk4 ;
	RULE 18 : IF (speed IS sp1) AND (track9 IS tr5 ) THEN accelerate IS acc5 , brake IS brk5 ;
	RULE 19 : IF (speed IS sp2) AND (track9 IS tr1 ) THEN accelerate IS acc6 , brake IS brk6 ;
	RULE 20 : IF (speed IS sp2) AND (track9 IS tr2 ) THEN accelerate IS acc7 , brake IS brk7 ;
	RULE 21 : IF (speed IS sp2) AND (track9 IS tr3 ) THEN accelerate IS acc8 , brake IS brk8 ;
	RULE 22 : IF (speed IS sp2) AND (track9 IS tr4 ) THEN accelerate IS acc9 , brake IS brk9 ;
	RULE 23 : IF (speed IS sp2) AND (track9 IS tr5 ) THEN accelerate IS acc10, brake IS brk10;
	RULE 24 : IF (speed IS sp3) AND (track9 IS tr1 ) THEN accelerate IS acc11, brake IS brk11;
	RULE 25 : IF (speed IS sp3) AND (track9 IS tr2 ) THEN accelerate IS acc12, brake IS brk12;
	RULE 26 : IF (speed IS sp3) AND (track9 IS tr3 ) THEN accelerate IS acc13, brake IS brk13;
	RULE 27 : IF (speed IS sp3) AND (track9 IS tr4 ) THEN accelerate IS acc14, brake IS brk14;
	RULE 28 : IF (speed IS sp3) AND (track9 IS tr5 ) THEN accelerate IS acc15, brake IS brk15;
	RULE 29 : IF (speed IS sp4) AND (track9 IS tr1 ) THEN accelerate IS acc16, brake IS brk16;
	RULE 30 : IF (speed IS sp4) AND (track9 IS tr2 ) THEN accelerate IS acc17, brake IS brk17;
	RULE 31 : IF (speed IS sp4) AND (track9 IS tr3 ) THEN accelerate IS acc18, brake IS brk18;
	RULE 32 : IF (speed IS sp4) AND (track9 IS tr4 ) THEN accelerate IS acc19, brake IS brk19;
	RULE 33 : IF (speed IS sp4) AND (track9 IS tr5 ) THEN accelerate IS acc20, brake IS brk20;
	RULE 34 : IF (speed IS sp5) AND (track9 IS tr1 ) THEN accelerate IS acc21, brake IS brk21;
	RULE 35 : IF (speed IS sp5) AND (track9 IS tr2 ) THEN accelerate IS acc22, brake IS brk22;
	RULE 36 : IF (speed IS sp5) AND (track9 IS tr3 ) THEN accelerate IS acc23, brake IS brk23;
	RULE 37 : IF (speed IS sp5) AND (track9 IS tr4 ) THEN accelerate IS acc24, brake IS brk24;
	RULE 38 : IF (speed IS sp5) AND (track9 IS tr5 ) THEN accelerate IS acc25, brake IS brk25;
	
	RULE 39 : IF (track9 IS dist_very_far) THEN accelerate IS fullgas, brake IS nobrake;
	
	
	
	
	
	
	
END_RULEBLOCK

END_FUNCTION_BLOCK